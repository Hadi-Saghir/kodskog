apiVersion: v1
kind: ConfigMap
metadata:
  name: kodskog-config
  namespace: mf
data:
  DB_URL: "DB_URL=jdbc:postgresql://kodskog-postgres-mf:5432/moviedb"
  DB_HOST: "postgres-mf-service"
  DB_PORT: "5432"
  DB_NAME: "moviedb"
  DB_USER: "movieuser"
  DB_USERNAME: "movieuser"
  DB_PASSWORD: "moviepassword"
  KEYCLOAK_CLIENT_ID: "kodskog"
  KEYCLOAK_CLIENT_SECRET: "BeJ2THx2xJk9UThtpZEFBs5XYgDMkOV8"
  KEYCLOAK_AUTH_SERVER_URL: "http://kodskog-keycloak-service.fe.svc.cluster.local:8080/realms/kodskog"
  MOVIEFLEX_API_URL: "http://kodskog-movieflex-service.mf.svc.cluster.local:10123"
# Create a Service for the MovieFlex application
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-movieflex-service
  namespace: mf
spec:
  selector:
    app: kodskog-movieflex
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 10123
    nodePort: 30003
# Create a Service for the PostgreSQL database
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-mf-service
  namespace: mf
spec:
  selector:
    app: postgres-mf
  ports:
  - name: postgres
    protocol: TCP
    port: 5432
    targetPort: 5432
# Create a Service for the PostgreSQL fetch container
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-mf-fetch-service
  namespace: mf
spec:
  selector:
    app: postgres-mf-fetch
  ports:
  - name: http
    protocol: TCP
    port: 80
# Create a Deployment for the MovieFlex application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodskog-movieflex-deployment
  namespace: mf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-movieflex
  template:
    metadata:
      labels:
        app: kodskog-movieflex
    spec:
      initContainers:
      - name: wait-for-postgres-mf
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres-mf-service 5432; do sleep 2; done']
      containers:
      - name: kodskog-movieflex
        image: hadisaghir/kodskog-movieflex:v2
        ports:
        - containerPort: 10123
        env:
        - name: MOVIEFLEX_API_URL
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MOVIEFLEX_API_URL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PASSWORD
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_CLIENT_ID
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_CLIENT_SECRET
        - name: KEYCLOAK_AUTH_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_AUTH_SERVER_URL
# Create a StatefulSet for the PostgreSQL database
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-mf-deployment
  namespace: mf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-mf
  template:
    metadata:
      labels:
        app: postgres-mf
    spec:
      containers:
      - name: postgres-mf
        image: hadisaghir/postgres-mf:v2
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PASSWORD
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_HOST
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-mf-fetch-job
  namespace: mf
spec:
  template:
    metadata:
      labels:
        app: postgres-mf-fetch
    spec:
      initContainers:
      - name: wait-for-postgres-mf
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres-mf-service 5432; do sleep 2; done']
      containers:
      - name: postgres-mf-fetch
        image: hadisaghir/postgres-mf-fetch:v2
        env:
        - name: MOVIEFLEX_API_URL
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MOVIEFLEX_API_URL
        - name: DB_URL
          value: jdbc:postgresql://postgres-mf-service:5432/moviedb
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PASSWORD
        ports:
        - containerPort: 80
        volumeMounts:
        - name: movies-volume
          mountPath: /usr/src/myapp/movies.csv
          subPath: movies.csv
        - name: mf-pvc
          mountPath: /usr/src/myapp/data
      volumes:
      - name: movies-volume
        configMap:
          name: movies-configmap
      - name: mf-pvc
        persistentVolumeClaim:
          claimName: mf-pvc
      restartPolicy: Never

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kodskog-mf-ingress
  namespace: mf
spec:
  rules:
  - host: mf.hadisaghir.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kodskog-movieflex-service
            port:
              number: 10123

