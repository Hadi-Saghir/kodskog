apiVersion: v1
kind: Namespace
metadata:
  name: fe
---
apiVersion: v1
kind: Namespace
metadata:
  name: iam
---
apiVersion: v1
kind: Namespace
metadata:
  name: mf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kodskog-config
data:
  MOVIEFLEX_API_URL: "http://kodskog-movieflex-service:80"
  DB_HOST: "postgres-mf-service"
  DB_PORT: "5432"
  DB_NAME: "mydatabase"
  DB_USER: "myusername"
  DB_PASSWORD: "mypassword"
  KODSKOG_FE_SERVICE_DNS: "kodskog-fe-service"
  KODSKOG_FE_SERVICE_CLUSTER_IP: "10.97.57.14"
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-fe-service
  namespace: fe
spec:
  selector:
    app: kodskog-fe
  type: LoadBalancer
  ports:
    - name: http
      port: 3000
      nodePort: 30001
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-keycloak-service
  namespace: iam
spec:
  selector:
    app: kodskog-keycloak
  type: LoadBalancer
  ports:
    - name: http
      port: 8080
      nodePort: 30002
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-movieflex-service
  namespace: mf
spec:
  selector:
    app: kodskog-movieflex
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 10123
      nodePort: 30003
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-mf-service
  namespace: mf
spec:
  selector:
    app: postgres-mf
  ports:
    - name: http
      protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-mf-fetch-service
  namespace: mf
spec:
  selector:
    app: postgres-mf-fetch
  ports:
    - name: http
      protocol: TCP
      port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodskog-fe-deployment
  namespace: fe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-fe
  template:
    metadata:
      labels:
        app: kodskog-fe
    spec:
      containers:
      - name: kodskog-fe
        image: hadisaghir/homepage-kodskog-fe:v2
        ports:
        - containerPort: 3000
        env:
        - name: MOVIEFLEX_API_URL
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MOVIEFLEX_API_URL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodskog-keycloak-deployment
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-keycloak
  template:
    metadata:
      labels:
        app: kodskog-keycloak
    spec:
      containers:
      - name: kodskog-keycloak
        image: jboss/keycloak:latest
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kodskog-movieflex-deployment
  namespace: mf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-movieflex
  serviceName: postgres-mf-service  # Use the headless service for stable network identities
  template:
    metadata:
      labels:
        app: kodskog-movieflex
    spec:
      initContainers:
      - name: wait-for-postgres-mf
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres-mf-service 5432; do sleep 2; done']
      containers:
      - name: kodskog-movieflex
        image: hadisaghir/homepage-kodskog-movieflex:v2
        ports:
        - containerPort: 10123
        env:
        - name: MOVIEFLEX_API_URL
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MOVIEFLEX_API_URL
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-mf-deployment
  namespace: mf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-mf
  serviceName: postgres-mf-service  # Use the headless service for stable network identities
  template:
    metadata:
      labels:
        app: postgres-mf
    spec:
      containers:
      - name: postgres-mf
        image: hadisaghir/homepage-postgres-mf:v2
        ports:
        - containerPort: 5432
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: postgres-mf-fetch-deployment
  namespace: mf
spec:
  selector:
    matchLabels:
      app: postgres-mf-fetch
  template:
    metadata:
      labels:
        app: postgres-mf-fetch
    spec:
      initContainers:
      - name: wait-for-postgres-mf
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres-mf-service 5432; do sleep 2; done']
      containers:
      - name: postgres-mf-fetch
        image: hadisaghir/homepage-postgres-mf-fetch:v2
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kodskog-ingress
# spec:
#   rules:
#     - host: www.keycloak.hadisaghir.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: kodskog-keycloak-service
#                 port:
#                   number: 8080
#     - host: www.movieflex.hadisaghir.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: kodskog-movieflex-service
#                 port:
#                   number: 10123
#     - host: www.hadisaghir.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: kodskog-fe-service
#                 port:
#                   number: 3000
 
