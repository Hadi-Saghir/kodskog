apiVersion: v1
kind: ConfigMap
metadata:
  name: kodskog-config
  namespace: iam
data:
  DB_VENDOR: "MYSQL"
  DB_ADDR: "mysql-iam-service.iam.svc.cluster.local"
  DB_DATABASE: "keycloak"
  DB_USER: "keycloak"
  DB_PASSWORD: "keycloak"
  MYSQL_ROOT_PASSWORD: "root"
  MYSQL_DATABASE: "keycloak"
  MYSQL_USER: "keycloak"
  MYSQL_PASSWORD: "keycloak"
  KEYCLOAK_USER: "admin"
  KEYCLOAK_PASSWORD: "admin"
  KEYCLOAK_HOSTNAME: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_MIGRATION_DIR: "/opt/jboss/keycloak/import"
  KEYCLOAK_MIGRATION_STRATEGY: "OVERWRITE_EXISTING"
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-keycloak-service
  namespace: iam
spec:
  selector:
    app: kodskog-keycloak
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
    nodePort: 30002
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-iam-service
  namespace: iam
spec:
  selector:
    app: mysql-iam
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kodskog-keycloak-ingress
  namespace: iam
spec:
  rules:
  - host: keycloak.kodskog.se
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kodskog-keycloak-service
            port:
              number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodskog-keycloak
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-keycloak
  template:
    metadata:
      labels:
        app: kodskog-keycloak
    spec:
      containers:
      - name: kodskog-keycloak
        image: jboss/keycloak:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_VENDOR
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_VENDOR
        - name: DB_ADDR
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_ADDR
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_DATABASE
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PASSWORD
        - name: KEYCLOAK_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_USER
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_PASSWORD
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: import-volume
        configMap:
          name: keycloak-configmap
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-iam-deployment
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-iam
  template:
    metadata:
      labels:
        app: mysql-iam
    spec:
      containers:
      - name: mysql-iam
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_PASSWORD
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: traffic-logger-service
  namespace: iam
spec:
  selector:
    app: traffic-logger
  type: LoadBalancer
  ports:
  - name: http
    port: 5001
    targetPort: 5000
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traffic-logger-config
  namespace: iam
data:
  LOGGER_API_URL: "http://traffic-logger-service.iam.svc.cluster.local:5001"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-logger
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-logger
  template:
    metadata:
      labels:
        app: traffic-logger
    spec:
      containers:
      - name: traffic-logger
        image: hadisaghir/kodskog-traffic-logger:v2
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: traffic-logger-config
# For account-manager
---
apiVersion: v1
kind: Service
metadata:
  name: account-manager-service
  namespace: iam
spec:
  selector:
    app: account-manager
  type: LoadBalancer
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: account-manager-config
  namespace: iam
data:
  KEYCLOAK_ADMIN_URL: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_URL_OPENID: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_REALM: "kodskog"
  KEYCLOAK_CLIENT_ID: "kodskog"
  KEYCLOAK_CLIENT_SECRET: "p1cTIItGD8kfDuL0Cb1VZeUq5miliRdN"
  LOGGER_API_URL: "http://traffic-logger-service.iam.svc.cluster.local:5001"
  KEYCLOAK_ADMIN_USERNAME: "admin"
  KEYCLOAK_ADMIN_PASSWORD: "admin"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-manager
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account-manager
  template:
    metadata:
      labels:
        app: account-manager
    spec:
      initContainers:
      - name: wait-for-keycloak
        image: appropriate/curl
        command: ['sh', '-c', 'until curl http://kodskog-keycloak-service.iam.svc.cluster.local:8080/auth/realms/master; do echo waiting for keycloak; sleep 2; done;']
      containers:
      - name: account-manager
        image: hadisaghir/kodskog-oakauth:v2
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: account-manager-config
