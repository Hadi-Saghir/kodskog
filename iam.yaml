apiVersion: v1
kind: ConfigMap
metadata:
  name: kodskog-config
  namespace: iam
data:
  DB_VENDOR: "MYSQL"
  DB_ADDR: "mysql-iam-service.iam.svc.cluster.local"
  DB_DATABASE: "keycloak"
  DB_USER: "keycloak"
  DB_PASSWORD: "keycloak"
  MYSQL_ROOT_PASSWORD: "root"
  MYSQL_DATABASE: "keycloak"
  MYSQL_USER: "keycloak"
  MYSQL_PASSWORD: "keycloak"
  KEYCLOAK_USER: "admin"
  KEYCLOAK_PASSWORD: "admin"
  KEYCLOAK_HOSTNAME: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_MIGRATION_DIR: "/opt/jboss/keycloak/import"
  KEYCLOAK_MIGRATION_STRATEGY: "OVERWRITE_EXISTING"
---
apiVersion: v1
kind: Service
metadata:
  name: kodskog-keycloak-service
  namespace: iam
spec:
  selector:
    app: kodskog-keycloak
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
    nodePort: 30002
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-iam-service
  namespace: iam
spec:
  selector:
    app: mysql-iam
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kodskog-keycloak-ingress
  namespace: iam
spec:
  rules:
  - host: keycloak.kodskog.se
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kodskog-keycloak-service
            port:
              number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodskog-keycloak
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kodskog-keycloak
  template:
    metadata:
      labels:
        app: kodskog-keycloak
    spec:
      containers:
      - name: kodskog-keycloak
        image: jboss/keycloak:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_VENDOR
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_VENDOR
        - name: DB_ADDR
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_ADDR
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_DATABASE
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: DB_PASSWORD
        - name: KEYCLOAK_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_USER
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: KEYCLOAK_PASSWORD
        volumeMounts:
        - name: import-volume
          mountPath: /opt/jboss/keycloak/import
      volumes:
      - name: import-volume
        configMap:
          name: keycloak-configmap
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-iam-deployment
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-iam
  template:
    metadata:
      labels:
        app: mysql-iam
    spec:
      containers:
      - name: mysql-iam
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kodskog-config
              key: MYSQL_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: traffic-logger-service
  namespace: iam
spec:
  selector:
    app: traffic-logger
  type: LoadBalancer
  ports:
  - name: http
    port: 5001
    targetPort: 5000
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traffic-logger-config
  namespace: iam
data:
  LOGGER_API_URL: "http://traffic-logger-service.iam.svc.cluster.local:5001"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-logger
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-logger
  template:
    metadata:
      labels:
        app: traffic-logger
    spec:
      containers:
      - name: traffic-logger
        image: hadisaghir/kodskog-traffic-logger:v2
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: traffic-logger-config
# For account-manager
---
apiVersion: v1
kind: Service
metadata:
  name: account-manager-service
  namespace: iam
spec:
  selector:
    app: account-manager
  type: LoadBalancer
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: account-manager-config
  namespace: iam
data:
  KEYCLOAK_ADMIN_URL: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_URL_OPENID: "http://kodskog-keycloak-service.iam.svc.cluster.local:8080"
  KEYCLOAK_REALM: "kodskog"
  KEYCLOAK_CLIENT_ID: "kodskog"
  KEYCLOAK_CLIENT_SECRET: "p1cTIItGD8kfDuL0Cb1VZeUq5miliRdN"
  LOGGER_API_URL: "http://traffic-logger-service.iam.svc.cluster.local:5001"
  KEYCLOAK_ADMIN_USERNAME: "admin"
  KEYCLOAK_ADMIN_PASSWORD: "admin"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-manager
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account-manager
  template:
    metadata:
      labels:
        app: account-manager
    spec:
      containers:
      - name: account-manager
        image: hadisaghir/kodskog-oakauth:v2
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: account-manager-config

# ---
# apiVersion: k8s.keycloak.org/v2alpha1
# kind: KeycloakRealmImport
# metadata:
#   name: kodskog-realm-import
#   namespace: iam
# spec:
#   keycloakCRName: kodskog-keycloak
#   realm:
#     id: kodskog
#     realm: kodskog
#     notBefore: 0
#     defaultSignatureAlgorithm: RS256
#     revokeRefreshToken: false
#     refreshTokenMaxReuse: 0
#     accessTokenLifespan: 300
#     accessTokenLifespanForImplicitFlow: 900
#     ssoSessionIdleTimeout: 1800
#     ssoSessionMaxLifespan: 36000
#     ssoSessionIdleTimeoutRememberMe: 0
#     ssoSessionMaxLifespanRememberMe: 0
#     offlineSessionIdleTimeout: 2592000
#     offlineSessionMaxLifespanEnabled: false
#     offlineSessionMaxLifespan: 5184000
#     clientSessionIdleTimeout: 0
#     clientSessionMaxLifespan: 0
#     clientOfflineSessionIdleTimeout: 0
#     clientOfflineSessionMaxLifespan: 0
#     accessCodeLifespan: 60
#     accessCodeLifespanUserAction: 300
#     accessCodeLifespanLogin: 1800
#     actionTokenGeneratedByAdminLifespan: 43200
#     actionTokenGeneratedByUserLifespan: 300
#     oauth2DeviceCodeLifespan: 600
#     oauth2DevicePollingInterval: 5
#     enabled: true
#     sslRequired: external
#     registrationAllowed: false
#     registrationEmailAsUsername: false
#     rememberMe: false
#     verifyEmail: false
#     loginWithEmailAllowed: true
#     duplicateEmailsAllowed: false
#     resetPasswordAllowed: false
#     editUsernameAllowed: false
#     bruteForceProtected: false
#     permanentLockout: false
#     maxFailureWaitSeconds: 900
#     minimumQuickLoginWaitSeconds: 60
#     waitIncrementSeconds: 60
#     quickLoginCheckMilliSeconds: 1000
#     maxDeltaTimeSeconds: 43200
#     failureFactor: 30
#     defaultRole:
#       id: 31759c73-23d9-4ef3-a8f9-c4e656d2dfa2
#       name: default-roles-kodskog
#       description: "${role_default-roles}"
#       composite: true
#       clientRole: false
#       containerId: kodskog
#     requiredCredentials:
#     - password
#     otpPolicyType: totp
#     otpPolicyAlgorithm: HmacSHA1
#     otpPolicyInitialCounter: 0
#     otpPolicyDigits: 6
#     otpPolicyLookAheadWindow: 1
#     otpPolicyPeriod: 30
#     otpSupportedApplications:
#     - FreeOTP
#     - Google Authenticator
#     webAuthnPolicyRpEntityName: keycloak
#     webAuthnPolicySignatureAlgorithms:
#     - ES256
#     webAuthnPolicyRpId: ''
#     webAuthnPolicyAttestationConveyancePreference: not specified
#     webAuthnPolicyAuthenticatorAttachment: not specified
#     webAuthnPolicyRequireResidentKey: not specified
#     webAuthnPolicyUserVerificationRequirement: not specified
#     webAuthnPolicyCreateTimeout: 0
#     webAuthnPolicyAvoidSameAuthenticatorRegister: false
#     webAuthnPolicyAcceptableAaguids: []
#     webAuthnPolicyPasswordlessRpEntityName: keycloak
#     webAuthnPolicyPasswordlessSignatureAlgorithms:
#     - ES256
#     webAuthnPolicyPasswordlessRpId: ''
#     webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
#     webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
#     webAuthnPolicyPasswordlessRequireResidentKey: not specified
#     webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
#     webAuthnPolicyPasswordlessCreateTimeout: 0
#     webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
#     webAuthnPolicyPasswordlessAcceptableAaguids: []
#     scopeMappings:
#     - clientScope: offline_access
#       roles:
#       - offline_access
#     clientScopeMappings:
#       account:
#       - client: account-console
#         roles:
#         - manage-account
#     clients:
#     - id: 0035cf03-a190-4717-912f-b6d19bfab749
#       clientId: account
#       name: "${client_account}"
#       rootUrl: "${authBaseUrl}"
#       baseUrl: "/realms/kodskog/account/"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris:
#       - "/realms/kodskog/account/*"
#       webOrigins: []
#       notBefore: 0
#       bearerOnly: false
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: false
#       serviceAccountsEnabled: false
#       publicClient: true
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes: {}
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: c8f985eb-5132-4bec-ad88-4baaf67e8901
#       clientId: account-console
#       name: "${client_account-console}"
#       rootUrl: "${authBaseUrl}"
#       baseUrl: "/realms/kodskog/account/"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris:
#       - "/realms/kodskog/account/*"
#       webOrigins: []
#       notBefore: 0
#       bearerOnly: false
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: false
#       serviceAccountsEnabled: false
#       publicClient: true
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes:
#         pkce.code.challenge.method: S256
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       protocolMappers:
#       - id: 7f92267a-9b27-46fa-b14d-8411f965e12a
#         name: audience resolve
#         protocol: openid-connect
#         protocolMapper: oidc-audience-resolve-mapper
#         consentRequired: false
#         config: {}
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: 4dc90305-5e92-4e98-9b64-bc21c3630f01
#       clientId: admin-cli
#       name: "${client_admin-cli}"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris: []
#       webOrigins: []
#       notBefore: 0
#       bearerOnly: false
#       consentRequired: false
#       standardFlowEnabled: false
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: true
#       serviceAccountsEnabled: false
#       publicClient: true
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes: {}
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: 0d11b949-9a5a-416c-928f-ae6cbae9f3b9
#       clientId: broker
#       name: "${client_broker}"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris: []
#       webOrigins: []
#       notBefore: 0
#       bearerOnly: true
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: false
#       serviceAccountsEnabled: false
#       publicClient: false
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes: {}
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: 8121042f-25a1-4ce8-a420-1e60d86a9ee2
#       clientId: kodskog
#       rootUrl: http://kodskog-fe-service.fe.svc.cluster.local:3000
#       adminUrl: http://kodskog-fe-service.fe.svc.cluster.local:3000
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       secret: "**********"
#       redirectUris:
#       - http://kodskog-fe-service.fe.svc.cluster.local:3000/*
#       webOrigins:
#       - http://kodskog-fe-service.fe.svc.cluster.local:3000
#       notBefore: 0
#       bearerOnly: false
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: true
#       serviceAccountsEnabled: false
#       publicClient: false
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes:
#         id.token.as.detached.signature: 'false'
#         saml.assertion.signature: 'false'
#         saml.force.post.binding: 'false'
#         saml.multivalued.roles: 'false'
#         saml.encrypt: 'false'
#         oauth2.device.authorization.grant.enabled: 'false'
#         backchannel.logout.revoke.offline.tokens: 'false'
#         saml.server.signature: 'false'
#         saml.server.signature.keyinfo.ext: 'false'
#         use.refresh.tokens: 'true'
#         exclude.session.state.from.auth.response: 'false'
#         oidc.ciba.grant.enabled: 'false'
#         saml.artifact.binding: 'false'
#         backchannel.logout.session.required: 'true'
#         client_credentials.use_refresh_token: 'false'
#         saml_force_name_id_format: 'false'
#         require.pushed.authorization.requests: 'false'
#         saml.client.signature: 'false'
#         tls.client.certificate.bound.access.tokens: 'false'
#         saml.authnstatement: 'false'
#         display.on.consent.screen: 'false'
#         saml.onetimeuse.condition: 'false'
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: true
#       nodeReRegistrationTimeout: -1
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: 46fb2a2e-9268-46de-ae98-6b8df04699aa
#       clientId: realm-management
#       name: "${client_realm-management}"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris: []
#       webOrigins: []
#       notBefore: 0
#       bearerOnly: true
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: false
#       serviceAccountsEnabled: false
#       publicClient: false
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes: {}
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     - id: 543d3ded-09c3-471e-a907-8c26e0d497ca
#       clientId: security-admin-console
#       name: "${client_security-admin-console}"
#       rootUrl: "${authAdminUrl}"
#       baseUrl: "/admin/kodskog/console/"
#       surrogateAuthRequired: false
#       enabled: true
#       alwaysDisplayInConsole: false
#       clientAuthenticatorType: client-secret
#       redirectUris:
#       - "/admin/kodskog/console/*"
#       webOrigins:
#       - "+"
#       notBefore: 0
#       bearerOnly: false
#       consentRequired: false
#       standardFlowEnabled: true
#       implicitFlowEnabled: false
#       directAccessGrantsEnabled: false
#       serviceAccountsEnabled: false
#       publicClient: true
#       frontchannelLogout: false
#       protocol: openid-connect
#       attributes:
#         pkce.code.challenge.method: S256
#       authenticationFlowBindingOverrides: {}
#       fullScopeAllowed: false
#       nodeReRegistrationTimeout: 0
#       protocolMappers:
#       - id: 594728b7-fe2d-4877-b969-2ad996181904
#         name: locale
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: locale
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: locale
#           jsonType.label: String
#       defaultClientScopes:
#       - web-origins
#       - roles
#       - profile
#       - email
#       optionalClientScopes:
#       - address
#       - phone
#       - offline_access
#       - microprofile-jwt
#     clientScopes:
#     - id: f424d4f1-3367-45d1-8272-e95ad0f9b9ba
#       name: phone
#       description: 'OpenID Connect built-in scope: phone'
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'true'
#         display.on.consent.screen: 'true'
#         consent.screen.text: "${phoneScopeConsentText}"
#       protocolMappers:
#       - id: ab7448cc-ec50-40ef-9171-baededec0e27
#         name: phone number
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: phoneNumber
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: phone_number
#           jsonType.label: String
#       - id: df9e7b99-df02-4c07-ad46-5452bf2ca8d6
#         name: phone number verified
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: phoneNumberVerified
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: phone_number_verified
#           jsonType.label: boolean
#     - id: 30d07a85-7825-412c-b580-87adce42c2dd
#       name: roles
#       description: OpenID Connect scope for add user roles to the access token
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'false'
#         display.on.consent.screen: 'true'
#         consent.screen.text: "${rolesScopeConsentText}"
#       protocolMappers:
#       - id: 5089eb61-e438-47cd-94b3-f641d0f5b396
#         name: realm roles
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-realm-role-mapper
#         consentRequired: false
#         config:
#           user.attribute: foo
#           access.token.claim: 'true'
#           claim.name: realm_access.roles
#           jsonType.label: String
#           multivalued: 'true'
#       - id: 2553bceb-1c4b-44f6-8710-49e6612ba634
#         name: audience resolve
#         protocol: openid-connect
#         protocolMapper: oidc-audience-resolve-mapper
#         consentRequired: false
#         config: {}
#       - id: a41c01c4-28b9-40ea-b810-a368eef551c7
#         name: client roles
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-client-role-mapper
#         consentRequired: false
#         config:
#           user.attribute: foo
#           access.token.claim: 'true'
#           claim.name: resource_access.${client_id}.roles
#           jsonType.label: String
#           multivalued: 'true'
#     - id: e87a7e55-6b13-46a3-819f-6705b0bdf004
#       name: web-origins
#       description: OpenID Connect scope for add allowed web origins to the access token
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'false'
#         display.on.consent.screen: 'false'
#         consent.screen.text: ''
#       protocolMappers:
#       - id: a562b149-a2b7-44a9-90f7-6ad6cb8f7a97
#         name: allowed web origins
#         protocol: openid-connect
#         protocolMapper: oidc-allowed-origins-mapper
#         consentRequired: false
#         config: {}
#     - id: 3725d08c-cc92-43bb-a74c-fe2748d58ddc
#       name: microprofile-jwt
#       description: Microprofile - JWT built-in scope
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'true'
#         display.on.consent.screen: 'false'
#       protocolMappers:
#       - id: 81be2139-f601-4e54-8588-01f803029823
#         name: groups
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-realm-role-mapper
#         consentRequired: false
#         config:
#           multivalued: 'true'
#           user.attribute: foo
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: groups
#           jsonType.label: String
#       - id: 3641fd63-32f5-4fee-b7bb-291d8517faa9
#         name: upn
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: username
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: upn
#           jsonType.label: String
#     - id: 548aa237-0779-45e3-ab86-f5d0541b827c
#       name: address
#       description: 'OpenID Connect built-in scope: address'
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'true'
#         display.on.consent.screen: 'true'
#         consent.screen.text: "${addressScopeConsentText}"
#       protocolMappers:
#       - id: 46a3d73c-e110-4e44-9c17-34142e2f4d6a
#         name: address
#         protocol: openid-connect
#         protocolMapper: oidc-address-mapper
#         consentRequired: false
#         config:
#           user.attribute.formatted: formatted
#           user.attribute.country: country
#           user.attribute.postal_code: postal_code
#           userinfo.token.claim: 'true'
#           user.attribute.street: street
#           id.token.claim: 'true'
#           user.attribute.region: region
#           access.token.claim: 'true'
#           user.attribute.locality: locality
#     - id: cf6a7aee-6748-457b-878c-f7d35bc02476
#       name: role_list
#       description: SAML role list
#       protocol: saml
#       attributes:
#         consent.screen.text: "${samlRoleListScopeConsentText}"
#         display.on.consent.screen: 'true'
#       protocolMappers:
#       - id: 7a0ff59c-6035-42da-b192-7b96df775a6e
#         name: role list
#         protocol: saml
#         protocolMapper: saml-role-list-mapper
#         consentRequired: false
#         config:
#           single: 'false'
#           attribute.nameformat: Basic
#           attribute.name: Role
#     - id: 16520cb0-f2e9-4e8c-8902-8739e9095d18
#       name: offline_access
#       description: 'OpenID Connect built-in scope: offline_access'
#       protocol: openid-connect
#       attributes:
#         consent.screen.text: "${offlineAccessScopeConsentText}"
#         display.on.consent.screen: 'true'
#     - id: de03df03-3af3-4bf6-82e6-187fa642a92f
#       name: profile
#       description: 'OpenID Connect built-in scope: profile'
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'true'
#         display.on.consent.screen: 'true'
#         consent.screen.text: "${profileScopeConsentText}"
#       protocolMappers:
#       - id: bbbe114a-bffe-4231-b4f3-aadbb8d6811e
#         name: birthdate
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: birthdate
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: birthdate
#           jsonType.label: String
#       - id: fb5911ab-1d8b-406e-8e83-b50a1ed4ea99
#         name: given name
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: firstName
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: given_name
#           jsonType.label: String
#       - id: fe4c27be-a2c7-404d-b4cd-3d05fc9e3c23
#         name: website
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: website
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: website
#           jsonType.label: String
#       - id: b10437ed-85d4-42ff-9f14-2987da95dad1
#         name: profile
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: profile
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: profile
#           jsonType.label: String
#       - id: 53d7df1c-beae-4348-9be1-86c7e32455c3
#         name: gender
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: gender
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: gender
#           jsonType.label: String
#       - id: db9cbadc-ca99-4a55-a0d7-cb73228f0405
#         name: username
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: username
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: preferred_username
#           jsonType.label: String
#       - id: 33ee6019-57dc-4204-8830-0909d0d763cc
#         name: updated at
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: updatedAt
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: updated_at
#           jsonType.label: String
#       - id: 1569f1a3-e19b-42c8-b5a4-bb3a28b44d30
#         name: picture
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: picture
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: picture
#           jsonType.label: String
#       - id: 63ea242a-27aa-4249-84ef-37c3cbc4e383
#         name: family name
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: lastName
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: family_name
#           jsonType.label: String
#       - id: ab708d2a-d64c-4839-a709-932f095d7671
#         name: middle name
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: middleName
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: middle_name
#           jsonType.label: String
#       - id: 439ad0ec-2d38-4693-acf2-0d7196fa51ed
#         name: full name
#         protocol: openid-connect
#         protocolMapper: oidc-full-name-mapper
#         consentRequired: false
#         config:
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           userinfo.token.claim: 'true'
#       - id: b8d48029-18c8-471a-9be2-08801bb0e915
#         name: zoneinfo
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: zoneinfo
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: zoneinfo
#           jsonType.label: String
#       - id: abc10c2a-154c-4985-a08a-e9db15967e5f
#         name: nickname
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: nickname
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: nickname
#           jsonType.label: String
#       - id: e75dc4a4-f36b-4d3b-8d67-c38f7a9db0f3
#         name: locale
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-attribute-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: locale
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: locale
#           jsonType.label: String
#     - id: d3f96cfb-328e-4adf-9cf8-9f1e421e9cc7
#       name: email
#       description: 'OpenID Connect built-in scope: email'
#       protocol: openid-connect
#       attributes:
#         include.in.token.scope: 'true'
#         display.on.consent.screen: 'true'
#         consent.screen.text: "${emailScopeConsentText}"
#       protocolMappers:
#       - id: e6ffe9fb-5d78-4eee-8493-b6f72cdce499
#         name: email
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: email
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: email
#           jsonType.label: String
#       - id: 3e43af52-487e-46b8-887f-cee49b540ec3
#         name: email verified
#         protocol: openid-connect
#         protocolMapper: oidc-usermodel-property-mapper
#         consentRequired: false
#         config:
#           userinfo.token.claim: 'true'
#           user.attribute: emailVerified
#           id.token.claim: 'true'
#           access.token.claim: 'true'
#           claim.name: email_verified
#           jsonType.label: boolean
#     defaultDefaultClientScopes:
#     - roles
#     - role_list
#     - email
#     - profile
#     - web-origins
#     defaultOptionalClientScopes:
#     - offline_access
#     - microprofile-jwt
#     - address
#     - phone
#     browserSecurityHeaders:
#       contentSecurityPolicyReportOnly: ''
#       xContentTypeOptions: nosniff
#       xRobotsTag: none
#       xFrameOptions: SAMEORIGIN
#       contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
#       xXSSProtection: 1; mode=block
#       strictTransportSecurity: max-age=31536000; includeSubDomains
#     smtpServer: {}
#     eventsEnabled: false
#     eventsListeners:
#     - jboss-logging
#     enabledEventTypes: []
#     adminEventsEnabled: false
#     adminEventsDetailsEnabled: false
#     identityProviders: []
#     identityProviderMappers: []
#     components:
#       org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
#       - id: 872113d4-c3b5-4b5c-8cba-f7f6b0ce2a5d
#         name: Max Clients Limit
#         providerId: max-clients
#         subType: anonymous
#         subComponents: {}
#         config:
#           max-clients:
#           - '200'
#       - id: 22240489-f445-4fa4-b997-81e631a90b62
#         name: Allowed Client Scopes
#         providerId: allowed-client-templates
#         subType: anonymous
#         subComponents: {}
#         config:
#           allow-default-scopes:
#           - 'true'
#       - id: a58968f4-1cdb-4236-8f01-1f503510d346
#         name: Allowed Client Scopes
#         providerId: allowed-client-templates
#         subType: authenticated
#         subComponents: {}
#         config:
#           allow-default-scopes:
#           - 'true'
#       - id: fbe07565-c849-44d9-b389-fcef565103a8
#         name: Allowed Protocol Mapper Types
#         providerId: allowed-protocol-mappers
#         subType: anonymous
#         subComponents: {}
#         config:
#           allowed-protocol-mapper-types:
#           - saml-user-attribute-mapper
#           - saml-user-property-mapper
#           - oidc-sha256-pairwise-sub-mapper
#           - saml-role-list-mapper
#           - oidc-usermodel-attribute-mapper
#           - oidc-usermodel-property-mapper
#           - oidc-full-name-mapper
#           - oidc-address-mapper
#       - id: 64551e87-0762-4590-97ec-120032570378
#         name: Full Scope Disabled
#         providerId: scope
#         subType: anonymous
#         subComponents: {}
#         config: {}
#       - id: 73206f60-9ea9-4f1c-83b5-5a663214e880
#         name: Allowed Protocol Mapper Types
#         providerId: allowed-protocol-mappers
#         subType: authenticated
#         subComponents: {}
#         config:
#           allowed-protocol-mapper-types:
#           - oidc-usermodel-property-mapper
#           - saml-user-attribute-mapper
#           - saml-user-property-mapper
#           - oidc-sha256-pairwise-sub-mapper
#           - oidc-full-name-mapper
#           - oidc-address-mapper
#           - saml-role-list-mapper
#           - oidc-usermodel-attribute-mapper
#       - id: b490c57a-0ff3-4c3a-aa73-ca019da2468e
#         name: Consent Required
#         providerId: consent-required
#         subType: anonymous
#         subComponents: {}
#         config: {}
#       - id: d9936b95-b2f6-4654-a6d9-2bfcfac02df9
#         name: Trusted Hosts
#         providerId: trusted-hosts
#         subType: anonymous
#         subComponents: {}
#         config:
#           host-sending-registration-request-must-match:
#           - 'true'
#           client-uris-must-match:
#           - 'true'
#       org.keycloak.keys.KeyProvider:
#       - id: 39cae968-3b6a-4264-8aee-c279a2d19b3f
#         name: rsa-enc-generated
#         providerId: rsa-enc-generated
#         subComponents: {}
#         config:
#           priority:
#           - '100'
#           algorithm:
#           - RSA-OAEP
#       - id: 1b2c4265-5ebd-4e16-94fc-2805d2fbab80
#         name: rsa-generated
#         providerId: rsa-generated
#         subComponents: {}
#         config:
#           priority:
#           - '100'
#       - id: 6d9620d2-8e80-4aa0-8ed5-5f636bb958ec
#         name: hmac-generated
#         providerId: hmac-generated
#         subComponents: {}
#         config:
#           priority:
#           - '100'
#           algorithm:
#           - HS256
#       - id: c627397f-e09c-4cde-95f2-b451df5d6210
#         name: aes-generated
#         providerId: aes-generated
#         subComponents: {}
#         config:
#           priority:
#           - '100'
#     internationalizationEnabled: false
#     supportedLocales: []
#     authenticationFlows:
#     - id: d53632cb-4530-401d-835d-30e7f1ac0d00
#       alias: Account verification options
#       description: Method with which to verity the existing account
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: idp-email-verification
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: ALTERNATIVE
#         priority: 20
#         flowAlias: Verify Existing Account by Re-authentication
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: edd5018e-31d9-4d45-a3c8-f0333ecaa602
#       alias: Authentication Options
#       description: Authentication options.
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: basic-auth
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: basic-auth-otp
#         authenticatorFlow: false
#         requirement: DISABLED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: auth-spnego
#         authenticatorFlow: false
#         requirement: DISABLED
#         priority: 30
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: e331abc7-46aa-4542-a8d4-850b791e1095
#       alias: Browser - Conditional OTP
#       description: Flow to determine if the OTP is required for the authentication
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: conditional-user-configured
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: auth-otp-form
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 5d9edc4b-e5b2-4122-a82f-8e477b4c23b8
#       alias: Direct Grant - Conditional OTP
#       description: Flow to determine if the OTP is required for the authentication
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: conditional-user-configured
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: direct-grant-validate-otp
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 3febd6d3-49f5-4c47-8f7c-85d5f023ebdd
#       alias: First broker login - Conditional OTP
#       description: Flow to determine if the OTP is required for the authentication
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: conditional-user-configured
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: auth-otp-form
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 44bb113c-5744-47ca-9707-5e2a2e40ce85
#       alias: Handle Existing Account
#       description: Handle what to do if there is existing account with same email/username like authenticated identity provider
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: idp-confirm-link
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: REQUIRED
#         priority: 20
#         flowAlias: Account verification options
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 7067f703-e2b5-4211-9618-47a65eb997ff
#       alias: Reset - Conditional OTP
#       description: Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: conditional-user-configured
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: reset-otp
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 3ad1a177-6548-41a9-abc0-5dca76ffbc48
#       alias: User creation or linking
#       description: Flow for the existing/non-existing user alternatives
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticatorConfig: create unique user config
#         authenticator: idp-create-user-if-unique
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: ALTERNATIVE
#         priority: 20
#         flowAlias: Handle Existing Account
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 0370746e-96b6-4576-9e40-f401fd026f6f
#       alias: Verify Existing Account by Re-authentication
#       description: Reauthentication of existing account
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: idp-username-password-form
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: CONDITIONAL
#         priority: 20
#         flowAlias: First broker login - Conditional OTP
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 7f87308a-0dfa-434b-80d1-3aae25f0b0b1
#       alias: browser
#       description: browser based authentication
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: auth-cookie
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: auth-spnego
#         authenticatorFlow: false
#         requirement: DISABLED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: identity-provider-redirector
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 25
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: ALTERNATIVE
#         priority: 30
#         flowAlias: forms
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 293884b4-3227-4d71-b409-3603c53bf466
#       alias: clients
#       description: Base authentication for clients
#       providerId: client-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: client-secret
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: client-jwt
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: client-secret-jwt
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 30
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: client-x509
#         authenticatorFlow: false
#         requirement: ALTERNATIVE
#         priority: 40
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 2f5c9af8-7e0e-4b3b-b9c0-41f6d0a55b07
#       alias: direct grant
#       description: OpenID Connect Resource Owner Grant
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: direct-grant-validate-username
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: direct-grant-validate-password
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: CONDITIONAL
#         priority: 30
#         flowAlias: Direct Grant - Conditional OTP
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: ec54abca-d968-4248-abe2-f6c5bbbcb303
#       alias: docker auth
#       description: Used by Docker clients to authenticate against the IDP
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: docker-http-basic-authenticator
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 32a35c04-7f35-4a4e-b3ce-4ac05ccfdb40
#       alias: first broker login
#       description: Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticatorConfig: review profile config
#         authenticator: idp-review-profile
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: REQUIRED
#         priority: 20
#         flowAlias: User creation or linking
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 5815a8bb-e06b-40e4-b5f0-3be7cf190f90
#       alias: forms
#       description: Username, password, otp and other auth forms.
#       providerId: basic-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: auth-username-password-form
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: CONDITIONAL
#         priority: 20
#         flowAlias: Browser - Conditional OTP
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: f6828d84-c32e-4abb-9a4d-3ce88e0655de
#       alias: http challenge
#       description: An authentication flow based on challenge-response HTTP Authentication Schemes
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: no-cookie-redirect
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: REQUIRED
#         priority: 20
#         flowAlias: Authentication Options
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: e0ee8efd-7e8d-4472-8956-834865cdafc6
#       alias: registration
#       description: registration flow
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: registration-page-form
#         authenticatorFlow: true
#         requirement: REQUIRED
#         priority: 10
#         flowAlias: registration form
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: d6aaa1b2-4888-4465-831c-f81bcbc77699
#       alias: registration form
#       description: registration form
#       providerId: form-flow
#       topLevel: false
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: registration-user-creation
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: registration-profile-action
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 40
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: registration-password-action
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 50
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: registration-recaptcha-action
#         authenticatorFlow: false
#         requirement: DISABLED
#         priority: 60
#         userSetupAllowed: false
#         autheticatorFlow: false
#     - id: 3febd01a-9b38-4bbe-b94a-d9aff87e5fbf
#       alias: reset credentials
#       description: Reset credentials for a user if they forgot their password or something
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: reset-credentials-choose-user
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: reset-credential-email
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 20
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticator: reset-password
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 30
#         userSetupAllowed: false
#         autheticatorFlow: false
#       - authenticatorFlow: true
#         requirement: CONDITIONAL
#         priority: 40
#         flowAlias: Reset - Conditional OTP
#         userSetupAllowed: false
#         autheticatorFlow: true
#     - id: 5736c994-f7ae-4e1f-a663-9f36f4197507
#       alias: saml ecp
#       description: SAML ECP Profile Authentication Flow
#       providerId: basic-flow
#       topLevel: true
#       builtIn: true
#       authenticationExecutions:
#       - authenticator: http-basic-authenticator
#         authenticatorFlow: false
#         requirement: REQUIRED
#         priority: 10
#         userSetupAllowed: false
#         autheticatorFlow: false
#     authenticatorConfig:
#     - id: c889eba1-68e3-4876-863c-d8b11f6faec9
#       alias: create unique user config
#       config:
#         require.password.update.after.registration: 'false'
#     - id: f7499cb2-566a-41d3-9894-e096c966ce01
#       alias: review profile config
#       config:
#         update.profile.on.first.login: missing
#     requiredActions:
#     - alias: CONFIGURE_TOTP
#       name: Configure OTP
#       providerId: CONFIGURE_TOTP
#       enabled: true
#       defaultAction: false
#       priority: 10
#       config: {}
#     - alias: terms_and_conditions
#       name: Terms and Conditions
#       providerId: terms_and_conditions
#       enabled: false
#       defaultAction: false
#       priority: 20
#       config: {}
#     - alias: UPDATE_PASSWORD
#       name: Update Password
#       providerId: UPDATE_PASSWORD
#       enabled: true
#       defaultAction: false
#       priority: 30
#       config: {}
#     - alias: UPDATE_PROFILE
#       name: Update Profile
#       providerId: UPDATE_PROFILE
#       enabled: true
#       defaultAction: false
#       priority: 40
#       config: {}
#     - alias: VERIFY_EMAIL
#       name: Verify Email
#       providerId: VERIFY_EMAIL
#       enabled: true
#       defaultAction: false
#       priority: 50
#       config: {}
#     - alias: delete_account
#       name: Delete Account
#       providerId: delete_account
#       enabled: false
#       defaultAction: false
#       priority: 60
#       config: {}
#     - alias: update_user_locale
#       name: Update User Locale
#       providerId: update_user_locale
#       enabled: true
#       defaultAction: false
#       priority: 1000
#       config: {}
#     browserFlow: browser
#     registrationFlow: registration
#     directGrantFlow: direct grant
#     resetCredentialsFlow: reset credentials
#     clientAuthenticationFlow: clients
#     dockerAuthenticationFlow: docker auth
#     attributes:
#       cibaBackchannelTokenDeliveryMode: poll
#       cibaExpiresIn: '120'
#       cibaAuthRequestedUserHint: login_hint
#       oauth2DeviceCodeLifespan: '600'
#       oauth2DevicePollingInterval: '5'
#       parRequestUriLifespan: '60'
#       cibaInterval: '5'
#     keycloakVersion: 16.1.1
#     userManagedAccessAllowed: false
#     clientProfiles:
#       profiles: []
#     clientPolicies:
#       policies: []

