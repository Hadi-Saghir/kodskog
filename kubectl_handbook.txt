kubectl run tmp-shell --rm -i --tty --namespace mf --image busybox --mount type=pvc,pvc.name=mf-pvc,target=/data
kubectl cp movies.csv mf/tmp-shell:/data/movies.csv
kubectl delete pod tmp-shell --namespace mf


------Apply-----

#!/bin/bash

namespaces=("iam" "fe" "mf")

# Initialize associative array to hold clusterIPs
declare -A clusterIPs

for ns in "${namespaces[@]}"; do
  # Apply resources in the namespace
  kubectl apply -f "${ns}.yaml" -n "${ns}"
  
  # Define services to wait for and extract ClusterIPs
  declare -a services=()
  if [ "$ns" == "iam" ]; then
    services=("kodskog-keycloak-service" "mysql-iam-service")
  elif [ "$ns" == "fe" ]; then
    services=("kodskog-fe-service")
  elif [ "$ns" == "mf" ]; then
    services=("kodskog-movieflex-service" "postgres-mf-service")
  fi
  
  # Wait for services to be available and store their ClusterIPs
  for svc in "${services[@]}"; do
    while ! kubectl get service/"$svc" -n "${ns}" 2>/dev/null; do
      echo "Waiting for $svc to be available in namespace ${ns}..."
      sleep 5
    done
    clusterIPs["$svc"]=$(kubectl get service/"$svc" -n "${ns}" --template='{{.spec.clusterIP}}')
  done
done

# Replace ConfigMap values with extracted ClusterIPs in each namespace
for ns in "${namespaces[@]}"; do
  cm_yaml=$(kubectl get configmap/kodskog-config -n "${ns}" -o yaml)
  
  for key in "${!clusterIPs[@]}"; do
    cm_yaml=$(echo "$cm_yaml" | sed -e "s|<$key-cluster-ip>|${clusterIPs["$key"]}|g")
  done
  
  echo "$cm_yaml" | kubectl apply -f -
done

echo "Deployment completed."

----

kubectl get keycloaks/kodskog-keycloak -o go-template='{{range .status.conditions}}CONDITION: {{.type}}{{"\n"}}  STATUS: {{.status}}{{"\n"}}  MESSAGE: {{.message}}{{"\n"}}{{end}}'


------apply-----

kubectl apply -f pvc.yaml
kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/kubernetes.yml


# Deploy resources
kubectl apply -f pvc.yaml
kubectl apply -f mf.yaml -n mf
kubectl apply -f fe.yaml -n fe
kubectl apply -f iam.yaml -n iam

echo "Deployment completed."


------Unapply-----

kubectl delete -f pvc.yaml
kubectl delete -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
kubectl delete -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
kubectl delete -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/22.0.3/kubernetes/kubernetes.yml


# Deploy resources
kubectl apply -f pvc.yaml
kubectl delete -f mf.yaml -n mf
kubectl delete -f fe.yaml -n fe
kubectl delete -f iam.yaml -n iam

echo "Deletion completed."

------Delete-----

#!/bin/bash

# Delete Deployments
kubectl delete deployment kodskog-fe-deployment
kubectl delete deployment kodskog-keycloak-deployment
kubectl delete deployment kodskog-movieflex-deployment
kubectl delete deployment postgres-mf-deployment
kubectl delete deployment postgres-mf-fetch-deployment

# Delete Services
kubectl delete service kodskog-fe-service
kubectl delete service kodskog-keycloak-service
kubectl delete service kodskog-movieflex-service
kubectl delete service postgres-mf-service
kubectl delete service postgres-mf-fetch-service

# Delete Ingress
kubectl delete ingress kodskog-ingress

# Delete Docker Images
docker rmi hadisaghir/homepage-kodskog-fe:v2
docker rmi hadisaghir/homepage-kodskog-movieflex:v2
docker rmi hadisaghir/homepage-postgres-mf-fetch:v2
docker rmi hadisaghir/mysql:v2
docker rmi hadisaghir/homepage-postgres-mf:v2


# Cleanup Pods, Services, and Ingress
kubectl delete pods --all
kubectl delete services --all
kubectl delete ingress --all

# Cleanup Deployments, StatefulSets, and DaemonSets
kubectl delete deployments --all
kubectl delete statefulsets --all
kubectl delete daemonsets --all

------Get info-----

# Get Status
kubectl get pods -o wide
kubectl get service
kubectl get ingress -o wide

# Get Status in Specific Namespace (fe, keycloak, mf)
kubectl get pods -n fe
kubectl get services -n fe
kubectl get deployments -n fe

kubectl get pods -n iam
kubectl get services -n iam
kubectl get deployments -n iam

kubectl get pods -n mf
kubectl get services -n mf
kubectl get deployments -n mf

# Get Logs for a Specific Pod
# kubectl logs <pod>


------Push to hub-----

# Tag Docker Images
docker tag kodskog-kodskog-fe:latest hadisaghir/kodskog-fe:v2
docker tag jboss/keycloak:latest hadisaghir/kodskog-keycloak:v2
docker tag mysql:latest hadisaghir/keycloak-mysql:v2
docker tag kodskog-kodskog-traffic-logger:latest hadisaghir/kodskog-traffic-logger:v2
docker tag kodskog-kodskog-oakauth:latest hadisaghir/kodskog-oakauth:v2
docker tag kodskog-kodskog-postgres-mf:latest hadisaghir/kodskog-postgres-mf:v2
docker tag kodskog-kodskog-postgres-mf-fetch:latest hadisaghir/kodskog-postgres-mf-fetch:v2
docker tag kodskog-kodskog-movieflex:latest hadisaghir/kodskog-movieflex:v2

# Push Docker Images to Docker Hub
docker push hadisaghir/kodskog-fe:v2
docker push hadisaghir/kodskog-keycloak:v2
docker push hadisaghir/keycloak-mysql:v2
docker push hadisaghir/kodskog-traffic-logger:v2
docker push hadisaghir/kodskog-oakauth:v2
docker push hadisaghir/kodskog-postgres-mf:v2
docker push hadisaghir/kodskog-postgres-mf-fetch:v2
docker push hadisaghir/kodskog-movieflex:v2

------keycloak-----

Add repository
helm repo add keycloak-operator https://kbumsik.io/keycloak-kubernetes/
Install chart
helm install my-keycloak-operator --namespace iam keycloak-operator/keycloak-operator